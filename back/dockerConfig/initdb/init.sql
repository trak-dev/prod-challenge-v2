CREATE TABLE Users (
    ID SERIAL PRIMARY KEY,
    EMAIL VARCHAR(255) NOT NULL UNIQUE,
    FIRSTNAME VARCHAR(63),
    LASTNAME VARCHAR(63),
    ROLE VARCHAR(15) DEFAULT 'STUDENT',
    MAGICLINK VARCHAR(255),
    VALID_UNTIL TIMESTAMP
);

CREATE INDEX idx_email ON users (EMAIL);

CREATE TABLE Challenges (
    ID SERIAL PRIMARY KEY,
    NAME VARCHAR(255) NOT NULL,
    DESCRIPTION TEXT,
    CREATOR_ID INT NOT NULL REFERENCES Users(ID) ON DELETE CASCADE,
    STATUS VARCHAR(15) DEFAULT 'DRAFT',
    TOTAL INT NOT NULL DEFAULT 0
);

CREATE INDEX idx_creator_idame ON challenges (CREATOR_ID);

CREATE TABLE Results (
    CHALLENGE_ID INT NOT NULL REFERENCES Challenges(ID) ON DELETE CASCADE,
    GRADE INT DEFAULT 0,
    USER_ID INT NOT NULL REFERENCES Users(ID) ON DELETE CASCADE,
    STEPS_VALIDATED INT NOT NULL DEFAULT 0,
    DATABASE_CREDENTIALS JSON,
    PRIMARY KEY (CHALLENGE_ID, USER_ID)
);

CREATE INDEX idx_challenge_id ON Results (CHALLENGE_ID);
CREATE INDEX idx_user_id ON Results (USER_ID);

CREATE TABLE Questions (
    ID SERIAL PRIMARY KEY,
    CHALLENGE_ID INT NOT NULL REFERENCES Challenges(ID) ON DELETE CASCADE,
    QUESTION TEXT NOT NULL,
    EXPECTED_ANSWER TEXT NOT NULL,
    COMMAND TEXT NOT NULL,
    VALUE INT
);

CREATE INDEX idx_challenge_id_question ON Questions (CHALLENGE_ID);


INSERT INTO Users (EMAIL, FIRSTNAME, LASTNAME, ROLE)
VALUES
    ('yann@gmail.com', 'yann', 'picaud', 'ADMIN'),
    ('user2@example.com', 'Jane', 'Smith', 'PROFESSOR'),
    ('user3@example.com', 'Michael', 'Johnson', 'STUDENT'),
    ('yann.picaud@gmail.com', 'Yann', 'Picaud', 'ADMIN')
;

